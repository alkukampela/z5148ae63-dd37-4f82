function remove_enemy(self, enemy_id) 
	for key, value in pairs(self.enemies) do
		if value == enemy_id then
			table.remove(self.enemies, key)
			break
		end
	end
end

function remove_all_enemies(self)
	for key, enemy_id in pairs(self.enemies) do
		go.delete(enemy_id)
	end
	self.enemies = {}
end


function init(self)
	self.display_height = tonumber(sys.get_config("display.height"))
	self.display_width = tonumber(sys.get_config("display.width"))

	self.timer = 100
	self.time_adjuster = 80

	self.velocity = -150

	self.stopped = false
	self.enemies = {}
end

function update(self)
	if self.timer <= 0 and self.stopped == false then
		local lane = math.random(4)
		local pos_x = (lane - 1) * 160 + 80
		local object_pos = vmath.vector3(pos_x, self.display_height - 40, 0)
		local velocity = vmath.vector3(0, self.velocity, 0)

		local id = factory.create("#enemyfactory", object_pos, nil, {velocity = velocity})
		table.insert(self.enemies, id)

		-- Schedule next spawn and its velocity
		self.timer = math.random(100) + self.time_adjuster;

		if self.time_adjuster > 0 then
			self.time_adjuster = self.time_adjuster - 1
		end

		self.velocity = self.velocity - math.random(20)
	end

	self.timer = self.timer - 1
end

function on_message(self, message_id, message, sender)
	if message_id == hash("stop") then
		self.stopped = true
	elseif message_id == hash("start") then
		self.timer = 100
		self.time_adjuster = 80
		self.velocity = -150
		self.stopped = false
	elseif message_id == hash("remove") then
		remove_enemy(self, message.enemy_id)
	elseif message_id == hash("remove_all_enemies") then
		remove_all_enemies(self)
	end
end
