local min_spawn_interval = 35
local max_spawn_addition = 100
local speed_adjuster = 7

local function remove_enemy(self, enemy_id) 
	for key, value in pairs(self.enemies) do
		if value == enemy_id then
			table.remove(self.enemies, key)
			return
		end
	end
end

local function remove_all_enemies(self)
	for key, enemy_id in pairs(self.enemies) do
		go.delete(enemy_id)
	end
	self.enemies = {}
end

local function reset_variables(self)
	self.velocity = math.random(-220, -200)
	self.timer = min_spawn_interval
	self.stopped = false
	msg.post("/spawner#humppa", "play_sound", { gain = 0.1 })
end

function init(self)
	math.randomseed(socket.gettime()) 
	
	self.display_height = tonumber(sys.get_config("display.height"))
	self.display_width = tonumber(sys.get_config("display.width"))
	self.lanes = 4
	self.lane_width = self.display_width / self.lanes
	
	reset_variables(self)
	self.enemies = {}
end

function update(self, dt)
	if self.timer <= 0 and self.stopped == false then
		local lane = math.random(self.lanes)
		local pos_x = (lane - 1) * self.lane_width + (self.lane_width / 2)
		local object_pos = vmath.vector3(pos_x, self.display_height + 90, 0)

		local velocity = self.velocity - math.random(25)
		local velocityVector = vmath.vector3(0, velocity, 0)

		local id = factory.create("#enemyfactory", object_pos, nil, {velocity = velocityVector})
		table.insert(self.enemies, id)

		-- Schedule next spawn and its velocity
		self.timer = min_spawn_interval + (math.sin(socket.gettime()) + 1) * max_spawn_addition
		self.velocity = self.velocity - speed_adjuster
	end

	self.timer = self.timer - 1
end

function on_message(self, message_id, message, sender)
	if message_id == hash("stop") then
		self.stopped = true
	elseif message_id == hash("start") then
		reset_variables(self)
	elseif message_id == hash("remove") then
		remove_enemy(self, message.enemy_id)
	elseif message_id == hash("remove_all_enemies") then
		remove_all_enemies(self)
	end
end
