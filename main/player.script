local states = { "state_ketchup", "state_mustard", "state_mayo" }
local lanes = 4

local function set_state(self, new_state)
	for i, state in ipairs(states) do
		if new_state == state then
			msg.post(state, "enable")
		else
			msg.post(state, "disable")
		end
	end

	self.current_state = string.sub(new_state, 7)
end

local function set_lane(self, lane)
	if lane > 0 and lane < lanes + 1 then
		self.lane = lane

		local pos = go.get_position()
		pos.x = lane * 200
		go.set_position(pos)
	end
end

local function move_left(self)
	set_lane(self, self.lane - 1)
end

local function move_right(self)
	set_lane(self, self.lane + 1)
end
	 
function init(self)
	-- this tells the engine to send input to on_input() in this script
	msg.post(".", "acquire_input_focus")
	set_state(self,  "state_ketchup")

	self.lane = 1
end

function final(self)
	-- Return input focus when the object is deleted
	msg.post(".", "release_input_focus")
end

function on_input(self, action_id, action)
	if action_id == hash("mayo") then
		set_state(self, "state_mayo")
	elseif action_id == hash("mustard") then
		set_state(self, "state_mustard")
	elseif action_id == hash("ketchup") then
		set_state(self, "state_ketchup")
	elseif action_id == hash("left") then
		move_left(self)
	elseif action_id == hash("right") then
		move_right(self)
	end
end
